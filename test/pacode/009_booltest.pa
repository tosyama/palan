ccall int32 printf();
ccall exit();

func bool_t() -> int32
{
	printf("t");
	return 100;
}

func bool_f() -> int32
{
	printf("f");
	return 0;
}

int32 i = 1;
byte b = 255;

// AND
if 0 && 0 { printf("a"); }
if 1 && 0 { printf("a"); }
if 0 && 1 { printf("a"); }
if 1 && 1 { printf("a"); }
if b && 0 { printf("b"); }
if 0 && i { printf("b"); }
if b && i { printf("b"); }
0->b;
0->i;
if b && 1 { printf("c"); }
if 1 && i { printf("c"); }
if b && i { printf("c"); }
if bool_t() && bool_t() { printf("d"); }
if bool_t() && bool_f() { printf("d"); } else { printf("D"); }
if bool_f() && bool_t() { printf("d"); } else { printf("D"); }
if bool_t() && bool_t() && bool_t(){ printf("d"); }

printf("\n");
// OR test
if 0 || 0 { printf("a"); }
if 1 || 0 { printf("a"); }
if 0 || 1 { printf("a"); }
if 1 || 1 { printf("a"); }
1->b;
2->i;
if b || 0 { printf("b"); }
if 0 || i { printf("b"); }
if b || i { printf("b"); }
0->b;
0->i;
if b || 1 { printf("c"); }
if 1 || i { printf("c"); }
if b && i { printf("c"); }
if bool_t() || bool_t() { printf("d"); }
if bool_t() || bool_f() { printf("d"); } else { printf("D"); }
if bool_f() || bool_t() { printf("d"); } else { printf("D"); }
if bool_t() || bool_f() || bool_t() { printf("d"); }

printf("\n");

// NOT
int16 s0, s1 = 0, 1;
printf("%d%d",!0,!1);
printf("%d%d",!s0,!s1);
printf("%d%d",!(s0==s1),!(s1>s0));

exit(0);
