ccall int64 printf();
ccall exit();

sbyte sb, byte ub = -128, 255;
int16 sd, uint16 ud = -32768, 65535;
int32 sl, uint32 ul = -2147483648, 4294967295;
int64 sq = -9223372036854775808;
uint64 uq, uq2 = 18446744073709551615u, 1u;

printf("%d %d %d %d\n", sb, ub, sd, ud);
printf("%d %u\n", sl, ul);
printf("%lld\n", sq);
printf("%llu\n", uq);

// integer promotion
uint64 udiv, umod = uq / 3u;
int64 idiv, imod = uq / 3;

printf("%llu %llu\n", udiv, umod);
printf("%lld %lld\n", idiv, imod);
uq % 3u -> umod;
uq % 3 -> imod;
printf("%lld %lld\n", umod, imod);

18446744073709551615u - 18446744073709551614u -> uq;
9223372036854775807u + 9223372036854775807u -> uq2;

printf("%llu %llu\n", uq, uq2);

sq + 1 + 2 -> sq;
uq + 1u + 2u -> uq;
printf("%lld %llu\n", sq, uq);

sq - 1 - 2 -> sq;
uq - 1u - 2u -> uq;

printf("%lld %llu\n", sq, uq);

3u * 2u -> uq;
uq * 2u * 3u -> uq;

35u / 2u -> uq2;
uq2 / 2u / 3u -> uq2;
35u % 9u -> ul;
printf("%llu %llu %lu\n", uq, uq2, ul);

exit(0);

