ccall int32 printf();

// Addition
const N = 1.23;

flo64 d1, d2 = N, 0.34 + 2;
flo64 d3, d4;
flo32 f1, f2;

d1 + d2 -> d3;
d1 + (0.34 + 2u) -> d4;

printf("%.2f %.2f", d3, d4);

int64 i1 = 9+1.28; int16 i2 = 5;

d1 + i1 -> d3;
d1 + i2 -> d4;
printf(" %.2f %.2f", d3, d4);

i1 + d1 -> f1;
i2 + d1 -> f2;
printf(" %.2f %.2f", f1, f2);

d1 + d2 -> i1;
d1 + d2 -> i2;
printf(" %d %d", i1, i2);

3u + 0.45 -> d3;
d1 + d2 + d3 -> d3;
1.23 + d2 -> d4;
printf(" %.2f %.2f", d3, d4);

1.23 + 2.34 -> d3;
d1 + d2 + 1.24 + d2 -> d4;
printf(" %.2f %.2f", d3, d4);

2 + d1 -> d3;
d1 + 2 -> d4;
printf(" %.2f %.2f", d3, d4);

printf(" %.2f %.2f\n", 1.11+d1, d1+d2);

// Subtraction
// d1 = 1.23
4.34 - 2 -> d2; // d2 = 2.34

d1 - d2 -> d3;
d2 - d1 -> d4;
printf("%.2f %.2f", d3, d4);

d1 - (0.34 - 2u) -> d3; // 1.23 + 1.66
d1 - (2u - 0.34) -> d4; // 1.23 - 1.66
printf(" %.2f %.2f", d3, d4);

10-0.48 -> i1; // 9.52 -> 9
5 -> i2; // 5

d1 - i1 -> d3; // 1.23 - 9 = -7.77
d1 - i2 -> d4; // 1.23 - 5 = -3.77

printf(" %.2f %.2f", d3, d4);

i1 - d1 -> f1;	// 9 - 1.23 = 7.77
i2 - d1 -> f2;	// 5 - 1.23 = 3.77
printf(" %.2f %.2f", f1, f2);

d1 - d2 -> i1;
d2 - d1 -> i2;
printf(" %d %d", i1, i2);

3.45 -> d3;
d3 - d2 - d1 -> d3;
1.23 - d2 -> d4;
printf(" %.2f %.2f", d3, d4);

1.23 - 2.34 -> d3;
d1 - d2 - 1.24 - d2 -> d4;
printf(" %.2f %.2f", d3, d4);

2 - d1 -> d3;
d1 - 2 -> d4;
printf(" %.2f %.2f\n", d3, d4);

// Negative
-d1 -> d3;
-(d1-d2) -> d4;
printf("%.2f %.2f", d3, d4);

1 + -(3.5) -> d3;
1.23 -> f1;
-f1 -> f2;
printf(" %.2f %.2f", d3, f2);

0.0 -> d1;
-d1 -> d3;
printf(" %.2f", d3);


