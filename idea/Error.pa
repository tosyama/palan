ccall FILE* fopen()
	! return==null;	// for c language.

func int MaybeError(int a)
	! int error, string msg
{
	// return -1 ; // ng

	if (ok)
		return 0;
	else
		!return 100, msg;

}

int success = MaybeError(10) !> err;

!>err(int error, string msg)
{
//NG int a=success;
// need to recover main returns if you will access.
success = -1;
}

FILE* f=fopen("r", "string") !> operr;
write(f, "data")!!;	//ignore errors;

close(f);

!> operr() {
	printf(stderr, "file open error!\n");
	exit(1);
}

do_somthing() !> err1;
do_somthing() !> err2;

!{	// errorblock. nomal flow can't into this block.
	byte[] *message;	// can use only premitve or reference (ownership val is invaild at err1/err2)
	!>err1() { message = "error1" };
	!>err2() { message = "error2" };
	printf(stderr, "%s!\n", message);	// can share the error logic.
}

// unit test?
